#ifndef TWISTERX_SRC_TWISTERX_IO_CSV_READ_CONFIG_H_
#define TWISTERX_SRC_TWISTERX_IO_CSV_READ_CONFIG_H_
#include <arrow/csv/chunker.h>
namespace twisterx {
namespace io {
namespace config {
class CSVReadOptions : public arrow::csv::ReadOptions,
                       public arrow::csv::ParseOptions,
                       public arrow::csv::ConvertOptions {
 public:
  /**
   * Whether to use the global CPU thread pool for reading.
   * Default is true
   */
  CSVReadOptions UseThreads(bool use_threads) {
    this->use_threads = use_threads;
    return *this;
  }

  /**
   * Change the default delimiter(",")
   * @param delimiter character representing the delimiter
   */
  CSVReadOptions WithDelimiter(char delimiter) {
    this->delimiter = delimiter;
    return *this;
  }

  /**
   * Ignore empty lines if any encountered while parsing
   */
  CSVReadOptions IgnoreEmptyLines() {
    this->ignore_empty_lines = true;
    return *this;
  }

  /**
   * Column names will be autogenerated and first row will
   * not be considered as the header row
   */
  CSVReadOptions AutoGenerateColumnNames() {
    this->autogenerate_column_names = true;
    return *this;
  }

  CSVReadOptions ColumnNames(std::vector<std::string> column_names) {
    this->column_names = column_names;
    return *this;
  }
};
}
}
}
#endif //TWISTERX_SRC_TWISTERX_IO_CSV_READ_CONFIG_H_
